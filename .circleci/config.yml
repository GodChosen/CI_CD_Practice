# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

# Define the orb that would be used
orbs: 
  awscli: circleci/aws-cli@2.0.3

# commands:
#   destroy_environment:
#     steps:
#       - run:
#           name: Install and configure aws cli
#           command: |
#             apk add --no-cache python3 py3-pip
#             pip3 install --upgrade pip
#             pip3 install --no-cache-dir awscli
#             rm -rf /var/cache/apk/*             
#       - run:
#           name: Destroy environment
#           when: on_fail
#           command: |
#             aws configure set aws_access_key_id ${aws_access_key_id}
#             aws configure set aws_secret_access_key ${aws_secret_access_key}
#             aws cloudformation delete-stack --stack-name myStack1${CIRCLE_WORKFLOW_ID:0:7}

# Define the jobs
jobs:
  create_infrastructure: 
    docker:
    - image: amazon/aws-cli
    steps:
      - checkout
      - run: aws configure set aws_access_key_id ${aws_access_key_id}
      - run: aws configure set aws_secret_access_key ${aws_secret_access_key}
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack1-${CIRCLE_WORKFLOW_ID:0:7} \
              --region us-east-1

  # configure_infrastructure: 
  #   docker:
  #   - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: [28:a5:a3:33:aa:9b:bd:92:3a:86:8c:0d:ac:17:0e:9f]
  #     - run:
  #         name: Install Ansible
  #         command: |
  #           apk add --update ansible
  #     - run:
  #         name: Run Playbook and Configure Server
  #         command: |
  #           ansible-playbook -i inventory main-remote.yml

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test jobs
          command: return 1            
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            apk add --no-cache python3 py3-pip
            pip3 install --upgrade pip
            pip3 install --no-cache-dir awscli
            rm -rf /var/cache/apk/* 
            aws configure set aws_access_key_id ${aws_access_key_id}
            aws configure set aws_secret_access_key ${aws_secret_access_key}
            aws configure set aws_default_region ${aws_default_region}
            aws cloudformation delete-stack --stack-name myStack1${CIRCLE_WORKFLOW_ID:0:7}

      # - run: apk add --update curl
      # - run:
      #     name: smoke test
      #     command: |
      #       URL="https://blog.udacity.com/"
      #       # Test if website exists
      #       if curl -s --head ${URL}
      #       then
      #         return 0
      #       else
      #         return 1
      #       fi


# Invoke jobs via workflows

workflows:
  my-workflow:
    jobs:
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
          requires: 
            - create_infrastructure